@page "/"
@using System.Text.RegularExpressions;
@inject IJSRuntime js

<PageTitle>WordHighlighter</PageTitle>

<div class="bg-rose-500 px-1 flex flex-col gap-2 rounded-xl w-full py-1 border-2 border-rose-300">
    @* Title *@
    <div class="text-white py-2 px-2 flex items-center justify-between border-b border-rose-300 text-sm font-mono">
        <h1 class="font-bold">Word Highlighter</h1>
        <span class="flex justify-ent items-center gap-1">
            <button onclick="document.getElementById('text').innerHTML = ''" class="py-1 px-2 bg-gradient-to-tr from-rose-600 to-rose-500 text-rose-200 border-2 border-rose-700 rounded-lg hover:border-rose-600">Clear</button>
            <button @onclick="Find" class="py-1 px-2 bg-gradient-to-tr from-rose-600 to-rose-500 text-rose-200 border-2 border-rose-700 rounded-lg hover:border-rose-600">Find</button>
        </span>
    </div>
    <div class="flex flex-col items-center gap-2 w-full">
        <div id="text" contenteditable="true" class="bg-amber-50 w-full text-gray-500 rounded-md py-2 px-4 h-96 overflow-auto">

        </div>
        <div class="w-full">
            <button @onclick="changematchCase" class="py-1 px-2 float-right bg-gradient-to-tr text-rose-200 border-2 rounded-lg @((MatchCase)?"border-rose-800 from-rose-700 to-rose-600":"border-rose-600 from-rose-600 to-rose-500")">Match Case</button>
        </div>
    </div>
    <div>

        <p class="text-rose-100 text-sm font-mono py-1 px-2 border-b mb-2 border-rose-400">Key words (Seprate with " , ") :</p>
        <textarea @bind="Words" type="text" class="bg-amber-50 text-gray-500 rounded-md py-2 px-4 h-24 w-full overflow-auto">
</textarea>
    </div>

</div>
<p class="absolute bottom-2 text-center text-amber-600">Designed with ❤ by <a target="_blank" href="https://github.com/AmirMahdyJebreily/" class="text-amber-700 hover:text-amber-500">Amir JCS</a></p>

@code{
    public string Text { get; set; }
    public string Words { get; set; }
    public bool MatchCase { get; set; }

    async Task Find()
    {
        Text = new(await js.InvokeAsync<string>("returnInnerHtml", "text"));
        string[] words = Words.Split(',').ToArray();
        string replaced = words.Select(word => "\\b" + word + "\\b")
                        .Aggregate(Text.Replace("<mark>", "").Replace("</mark>", ""), (current, word) =>
                                  Regex.Replace(current, word,
                                    string.Format("<mark>{0}</mark>", "$0"),
                                    (MatchCase) ? RegexOptions.None : RegexOptions.IgnoreCase));



        await js.InvokeVoidAsync("rplaceInnerHtml", "text", replaced);

    }


    void changematchCase()
    {
        MatchCase = !MatchCase;
    }
}


